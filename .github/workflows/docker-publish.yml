name: Sieve Test

on: [pull_request, workflow_dispatch]

env:
  IMAGE_NAMESPACE: ghcr.io/sieve-project/action

jobs:
  casskop-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
      - uses: actions/checkout@v2
      - name: Setup Git
        run: |
          git config --global user.name "sieve"
          git config --global user.email "sieve@sieve.com"
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.7
      - name: Setup GitHub Package Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
      - name: Install Python Packages
        run: |
          pip install -r requirements.txt
      - name: Install Kind
        run: |
          go get sigs.k8s.io/kind
          kind
      - name: Install Helm
        run: |
          wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz
          tar -zxvf helm-v3.6.0-linux-amd64.tar.gz
          sudo mv linux-amd64/helm /usr/local/bin/helm
          helm
      - name: Build Image
        run: |
          python3 build.py -p casskop-operator -m learn -d $IMAGE_NAMESPACE
          python3 build.py -p casskop-operator -m time-travel  -d $IMAGE_NAMESPACE
      - name: Sieve Learn
        run: |
          python3 sieve.py -p casskop-operator -t recreate -s learn -d $IMAGE_NAMESPACE
          python3 sieve.py -p casskop-operator -t reducepdb -s learn -d $IMAGE_NAMESPACE
          python3 sieve.py -p casskop-operator -t nodesperrack -s learn -d $IMAGE_NAMESPACE
      - uses: actions/upload-artifact@v2
        with:
          name: sieve-casskop-data
          path: data/casskop-operator
      - name: Sieve Test
        run: |
          python3 sieve.py -p casskop-operator -t recreate -d $IMAGE_NAMESPACE
          python3 sieve.py -p casskop-operator -t reducepdb -d $IMAGE_NAMESPACE
          python3 sieve.py -p casskop-operator -t nodesperrack -d $IMAGE_NAMESPACE
      - uses: actions/upload-artifact@v2
        with:
          name: sieve-casskop-artifact
          path: log
  cass-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
      - uses: actions/checkout@v2
      - name: Setup Git
        run: |
          git config --global user.name "sieve"
          git config --global user.email "sieve@sieve.com"
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.7
      - name: Setup GitHub Package Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
      - name: Install Python Packages
        run: |
          pip install -r requirements.txt
      - name: Install Kind
        run: |
          go get sigs.k8s.io/kind
          kind
      - name: Install Mage
        run: |
          go get -u github.com/magefile/mage
          mage -h
      - name: Build Image
        run: |
          python3 build.py -p cass-operator -m time-travel -d $IMAGE_NAMESPACE
      - name: Sieve Learn
        run: |
          python3 sieve.py -p cass-operator -t recreate -s learn -d $IMAGE_NAMESPACE
      - uses: actions/upload-artifact@v2
        with:
          name: sieve-cass-data
          path: |
            data/cass-operator
      - name: Sieve Test
        run: |
          python3 sieve.py -p cass-operator -t recreate -d $IMAGE_NAMESPACE
      - uses: actions/upload-artifact@v2
        with:
          name: sieve-cass-artifact
          path: |
            log
            log-batch
  xtradb-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
      - uses: actions/checkout@v2
      - name: Setup Git
        run: |
          git config --global user.name "sieve"
          git config --global user.email "sieve@sieve.com"
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.7
      - name: Setup GitHub Package Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
      - name: Install Python Packages
        run: |
          pip install -r requirements.txt
      - name: Install Kind
        run: |
          go get sigs.k8s.io/kind
          kind
      - name: Install Mage
        run: |
          go get -u github.com/magefile/mage
          mage -h
      - name: Build Image
        run: |
          python3 build.py -p xtradb-operator -m time-travel -d $IMAGE_NAMESPACE
      - name: Sieve Learn
        run: |
          python3 sieve.py -p xtradb-operator -t recreate -s learn -d $IMAGE_NAMESPACE
          python3 sieve.py -p xtradb-operator -t disable-enable-haproxy -s learn -d $IMAGE_NAMESPACE
          python3 sieve.py -p xtradb-operator -t disable-enable-proxysql -s learn -d $IMAGE_NAMESPACE
      - uses: actions/upload-artifact@v2
        with:
          name: sieve-xtradb-data
          path: |
            data/xtradb-operator
      - name: Sieve Test
        run: |
          python3 sieve.py -p xtradb-operator -t recreate -d $IMAGE_NAMESPACE
          python3 sieve.py -p xtradb-operator -t disable-enable-haproxy -d $IMAGE_NAMESPACE
          python3 sieve.py -p xtradb-operator -t disable-enable-proxysql -d $IMAGE_NAMESPACE
      - uses: actions/upload-artifact@v2
        with:
          name: sieve-xtradb-artifact
          path: |
            log
  mongodb-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
      - uses: actions/checkout@v2
      - name: Setup Git
        run: |
          git config --global user.name "sieve"
          git config --global user.email "sieve@sieve.com"
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.7
      - name: Setup GitHub Package Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
      - name: Install Python Packages
        run: |
          pip install -r requirements.txt
      - name: Install Kind
        run: |
          go get sigs.k8s.io/kind
          kind
      - name: Build Image
        run: |
          python3 build.py -p mongodb-operator -m time-travel  -d $IMAGE_NAMESPACE
      - name: Sieve Learn
        run: |
          python3 sieve.py -p mongodb-operator -t recreate -s learn -d $IMAGE_NAMESPACE
          python3 sieve.py -p mongodb-operator -t disable-enable-shard -s learn -d $IMAGE_NAMESPACE
      - uses: actions/upload-artifact@v2
        with:
          name: sieve-mongodb-data
          path: data/mongodb-operator
      - name: Sieve Test
        run: |
          python3 sieve.py -p mongodb-operator -t recreate -d $IMAGE_NAMESPACE
          python3 sieve.py -p mongodb-operator -t disable-enable-shard -d $IMAGE_NAMESPACE
      - uses: actions/upload-artifact@v2
        with:
          name: sieve-mongodb-artifact
          path: log
  cassandra-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
      - uses: actions/checkout@v2
      - name: Setup Git
        run: |
          git config --global user.name "sieve"
          git config --global user.email "sieve@sieve.com"
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.7
      - name: Setup GitHub Package Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
      - name: Install Python Packages
        run: |
          pip install -r requirements.txt
      - name: Install Kind
        run: |
          go get sigs.k8s.io/kind
          kind
      - name: Build Image
        run: |
          python3 build.py -p cassandra-operator -m learn -d $IMAGE_NAMESPACE
          python3 build.py -p cassandra-operator -m time-travel  -d $IMAGE_NAMESPACE
          python3 build.py -p cassandra-operator -m obs-gap  -d $IMAGE_NAMESPACE
      - name: Sieve Learn
        run: |
          python3 sieve.py -p cassandra-operator -t recreate -s learn -d $IMAGE_NAMESPACE
          python3 sieve.py -p cassandra-operator -t scaledown-scaleup -s learn -d $IMAGE_NAMESPACE
          python3 sieve.py -p cassandra-operator -t scaledown -s learn -d $IMAGE_NAMESPACE
      - uses: actions/upload-artifact@v2
        with:
          name: sieve-cassandra-data
          path: data/cassandra-operator
      - name: Sieve Test
        run: |
          python3 sieve.py -p cassandra-operator -t recreate -d $IMAGE_NAMESPACE
          python3 sieve.py -p cassandra-operator -t scaledown-scaleup -d $IMAGE_NAMESPACE
          python3 sieve.py -p cassandra-operator -t scaledown -d $IMAGE_NAMESPACE
      - uses: actions/upload-artifact@v2
        with:
          name: sieve-cassandra-artifact
          path: log
  rabbitmq-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
      - uses: actions/checkout@v2
      - name: Setup Git
        run: |
          git config --global user.name "sieve"
          git config --global user.email "sieve@sieve.com"
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.7
      - name: Setup GitHub Package Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
      - name: Install Python Packages
        run: |
          pip install -r requirements.txt
      - name: Install Kind
        run: |
          go get sigs.k8s.io/kind
          kind
      - name: Build Image
        run: |
          python3 build.py -p rabbitmq-operator -m learn -d $IMAGE_NAMESPACE
          python3 build.py -p rabbitmq-operator -m time-travel  -d $IMAGE_NAMESPACE
          python3 build.py -p rabbitmq-operator -m obs-gap  -d $IMAGE_NAMESPACE
      - name: Sieve Learn
        run: |
          python3 sieve.py -p rabbitmq-operator -t recreate -s learn -d $IMAGE_NAMESPACE
          python3 sieve.py -p rabbitmq-operator -t scaleup-scaledown -s learn -d $IMAGE_NAMESPACE
      - uses: actions/upload-artifact@v2
        with:
          name: sieve-rabbitmq-data
          path: data/rabbitmq-operator
      - name: Sieve Test
        run: |
          python3 sieve.py -p rabbitmq-operator -t recreate -d $IMAGE_NAMESPACE
          python3 sieve.py -p rabbitmq-operator -t scaleup-scaledown -d $IMAGE_NAMESPACE
      - uses: actions/upload-artifact@v2
        with:
          name: sieve-rabbitmq-artifact
          path: log
  zookeeper-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
      - uses: actions/checkout@v2
      - name: Setup Git
        run: |
          git config --global user.name "sieve"
          git config --global user.email "sieve@sieve.com"
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.7
      - name: Setup GitHub Package Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
      - name: Install Python Packages
        run: |
          pip install -r requirements.txt
      - name: Install Kind
        run: |
          go get sigs.k8s.io/kind
          kind
      - name: Build Image
        run: |
          python3 build.py -p zookeeper-operator -m learn -d $IMAGE_NAMESPACE
          python3 build.py -p zookeeper-operator -m time-travel  -d $IMAGE_NAMESPACE
      - name: Sieve Learn
        run: |
          python3 sieve.py -p zookeeper-operator -t recreate -s learn -d $IMAGE_NAMESPACE
          python3 sieve.py -p zookeeper-operator -t scaledown-scaleup -s learn -d $IMAGE_NAMESPACE
      - uses: actions/upload-artifact@v2
        with:
          name: sieve-zookeeper-artifact
          path: log
      - name: Sieve Test
        run: |
          python3 sieve.py -p zookeeper-operator -t recreate -d $IMAGE_NAMESPACE
          python3 sieve.py -p zookeeper-operator -t scaledown-scaleup -d $IMAGE_NAMESPACE
      - uses: actions/upload-artifact@v2
        with:
          name: sieve-zookeeper-data
          path: data/zookeeper-operator
