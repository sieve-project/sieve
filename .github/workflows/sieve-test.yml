# This file is automatically generated by gen_github_action.py on 2022-08-28 16:43:49.669538
name: Sieve Test
'on':
  pull_request: null
  workflow_dispatch: null
env:
  IMAGE_NAMESPACE: ghcr.io/sieve-project/action
jobs:
  cass-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -c cass-operator -m learn -r $IMAGE_NAMESPACE
    - name: Build Image - test
      run: python3 build.py -c cass-operator -m test -r $IMAGE_NAMESPACE
    - name: Build Image - vanilla
      run: python3 build.py -c cass-operator -m vanilla -r $IMAGE_NAMESPACE
    - name: Sieve Learn - cass-operator recreate
      run: python3 sieve.py -c cass-operator -w recreate -m learn-twice -r $IMAGE_NAMESPACE
    - name: Sieve Learn - cass-operator scaledown-scaleup
      run: python3 sieve.py -c cass-operator -w scaledown-scaleup -m learn-twice -r $IMAGE_NAMESPACE
    - name: Sieve Test - cass-operator intermediate-state-1
      run: python3 reproduce_bugs.py -c cass-operator -b intermediate-state-1 -r $IMAGE_NAMESPACE
    - name: Sieve Test - cass-operator intermediate-state-2
      run: python3 reproduce_bugs.py -c cass-operator -b intermediate-state-2 -r $IMAGE_NAMESPACE
    - name: Sieve Test - cass-operator stale-state-1
      run: python3 reproduce_bugs.py -c cass-operator -b stale-state-1 -r $IMAGE_NAMESPACE
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: sieve-cass-operator-log
        path: log
    - name: Remove cluster
      if: always()
      run: kind delete cluster
  cassandra-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -c cassandra-operator -m learn -r $IMAGE_NAMESPACE
    - name: Build Image - test
      run: python3 build.py -c cassandra-operator -m test -r $IMAGE_NAMESPACE
    - name: Build Image - vanilla
      run: python3 build.py -c cassandra-operator -m vanilla -r $IMAGE_NAMESPACE
  casskop-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -c casskop-operator -m learn -r $IMAGE_NAMESPACE
    - name: Build Image - test
      run: python3 build.py -c casskop-operator -m test -r $IMAGE_NAMESPACE
    - name: Build Image - vanilla
      run: python3 build.py -c casskop-operator -m vanilla -r $IMAGE_NAMESPACE
    - name: Sieve Learn - casskop-operator recreate
      run: python3 sieve.py -c casskop-operator -w recreate -m learn-twice -r $IMAGE_NAMESPACE
    - name: Sieve Learn - casskop-operator reducepdb
      run: python3 sieve.py -c casskop-operator -w reducepdb -m learn-twice -r $IMAGE_NAMESPACE
    - name: Sieve Learn - casskop-operator scaledown-to-zero
      run: python3 sieve.py -c casskop-operator -w scaledown-to-zero -m learn-twice -r $IMAGE_NAMESPACE
    - name: Sieve Test - casskop-operator intermediate-state-1
      run: python3 reproduce_bugs.py -c casskop-operator -b intermediate-state-1 -r $IMAGE_NAMESPACE
    - name: Sieve Test - casskop-operator stale-state-1
      run: python3 reproduce_bugs.py -c casskop-operator -b stale-state-1 -r $IMAGE_NAMESPACE
    - name: Sieve Test - casskop-operator stale-state-2
      run: python3 reproduce_bugs.py -c casskop-operator -b stale-state-2 -r $IMAGE_NAMESPACE
    - name: Sieve Test - casskop-operator unobserved-state-1
      run: python3 reproduce_bugs.py -c casskop-operator -b unobserved-state-1 -r $IMAGE_NAMESPACE
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: sieve-casskop-operator-log
        path: log
    - name: Remove cluster
      if: always()
      run: kind delete cluster
  elastic-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -c elastic-operator -m learn -r $IMAGE_NAMESPACE
    - name: Build Image - test
      run: python3 build.py -c elastic-operator -m test -r $IMAGE_NAMESPACE
    - name: Build Image - vanilla
      run: python3 build.py -c elastic-operator -m vanilla -r $IMAGE_NAMESPACE
    - name: Sieve Learn - elastic-operator recreate
      run: python3 sieve.py -c elastic-operator -w recreate -m learn-twice -r $IMAGE_NAMESPACE
    - name: Sieve Learn - elastic-operator scaledown-scaleup
      run: python3 sieve.py -c elastic-operator -w scaledown-scaleup -m learn-twice -r $IMAGE_NAMESPACE
    - name: Sieve Test - elastic-operator stale-state-1
      run: python3 reproduce_bugs.py -c elastic-operator -b stale-state-1 -r $IMAGE_NAMESPACE
    - name: Sieve Test - elastic-operator stale-state-2
      run: python3 reproduce_bugs.py -c elastic-operator -b stale-state-2 -r $IMAGE_NAMESPACE
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: sieve-elastic-operator-log
        path: log
    - name: Remove cluster
      if: always()
      run: kind delete cluster
  mongodb-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -c mongodb-operator -m learn -r $IMAGE_NAMESPACE
    - name: Build Image - test
      run: python3 build.py -c mongodb-operator -m test -r $IMAGE_NAMESPACE
    - name: Build Image - vanilla
      run: python3 build.py -c mongodb-operator -m vanilla -r $IMAGE_NAMESPACE
    - name: Sieve Learn - mongodb-operator disable-enable-arbiter
      run: python3 sieve.py -c mongodb-operator -w disable-enable-arbiter -m learn-twice -r $IMAGE_NAMESPACE
    - name: Sieve Learn - mongodb-operator disable-enable-shard
      run: python3 sieve.py -c mongodb-operator -w disable-enable-shard -m learn-twice -r $IMAGE_NAMESPACE
    - name: Sieve Learn - mongodb-operator recreate
      run: python3 sieve.py -c mongodb-operator -w recreate -m learn-twice -r $IMAGE_NAMESPACE
    - name: Sieve Learn - mongodb-operator run-cert-manager
      run: python3 sieve.py -c mongodb-operator -w run-cert-manager -m learn-twice -r $IMAGE_NAMESPACE
    - name: Sieve Learn - mongodb-operator scaleup-scaledown
      run: python3 sieve.py -c mongodb-operator -w scaleup-scaledown -m learn-twice -r $IMAGE_NAMESPACE
    - name: Sieve Test - mongodb-operator intermediate-state-1
      run: python3 reproduce_bugs.py -c mongodb-operator -b intermediate-state-1 -r $IMAGE_NAMESPACE
    - name: Sieve Test - mongodb-operator intermediate-state-2
      run: python3 reproduce_bugs.py -c mongodb-operator -b intermediate-state-2 -r $IMAGE_NAMESPACE
    - name: Sieve Test - mongodb-operator stale-state-1
      run: python3 reproduce_bugs.py -c mongodb-operator -b stale-state-1 -r $IMAGE_NAMESPACE
    - name: Sieve Test - mongodb-operator stale-state-2
      run: python3 reproduce_bugs.py -c mongodb-operator -b stale-state-2 -r $IMAGE_NAMESPACE
    - name: Sieve Test - mongodb-operator stale-state-3
      run: python3 reproduce_bugs.py -c mongodb-operator -b stale-state-3 -r $IMAGE_NAMESPACE
    - name: Sieve Test - mongodb-operator unobserved-state-1
      run: python3 reproduce_bugs.py -c mongodb-operator -b unobserved-state-1 -r $IMAGE_NAMESPACE
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: sieve-mongodb-operator-log
        path: log
    - name: Remove cluster
      if: always()
      run: kind delete cluster
  nifikop-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -c nifikop-operator -m learn -r $IMAGE_NAMESPACE
    - name: Build Image - test
      run: python3 build.py -c nifikop-operator -m test -r $IMAGE_NAMESPACE
    - name: Build Image - vanilla
      run: python3 build.py -c nifikop-operator -m vanilla -r $IMAGE_NAMESPACE
  rabbitmq-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -c rabbitmq-operator -m learn -r $IMAGE_NAMESPACE
    - name: Build Image - test
      run: python3 build.py -c rabbitmq-operator -m test -r $IMAGE_NAMESPACE
    - name: Build Image - vanilla
      run: python3 build.py -c rabbitmq-operator -m vanilla -r $IMAGE_NAMESPACE
    - name: Sieve Learn - rabbitmq-operator recreate
      run: python3 sieve.py -c rabbitmq-operator -w recreate -m learn-twice -r $IMAGE_NAMESPACE
    - name: Sieve Learn - rabbitmq-operator resize-pvc
      run: python3 sieve.py -c rabbitmq-operator -w resize-pvc -m learn-twice -r $IMAGE_NAMESPACE
    - name: Sieve Learn - rabbitmq-operator scaleup-scaledown
      run: python3 sieve.py -c rabbitmq-operator -w scaleup-scaledown -m learn-twice -r $IMAGE_NAMESPACE
    - name: Sieve Test - rabbitmq-operator intermediate-state-1
      run: python3 reproduce_bugs.py -c rabbitmq-operator -b intermediate-state-1 -r $IMAGE_NAMESPACE
    - name: Sieve Test - rabbitmq-operator stale-state-1
      run: python3 reproduce_bugs.py -c rabbitmq-operator -b stale-state-1 -r $IMAGE_NAMESPACE
    - name: Sieve Test - rabbitmq-operator stale-state-2
      run: python3 reproduce_bugs.py -c rabbitmq-operator -b stale-state-2 -r $IMAGE_NAMESPACE
    - name: Sieve Test - rabbitmq-operator unobserved-state-1
      run: python3 reproduce_bugs.py -c rabbitmq-operator -b unobserved-state-1 -r $IMAGE_NAMESPACE
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: sieve-rabbitmq-operator-log
        path: log
    - name: Remove cluster
      if: always()
      run: kind delete cluster
  xtradb-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -c xtradb-operator -m learn -r $IMAGE_NAMESPACE
    - name: Build Image - test
      run: python3 build.py -c xtradb-operator -m test -r $IMAGE_NAMESPACE
    - name: Build Image - vanilla
      run: python3 build.py -c xtradb-operator -m vanilla -r $IMAGE_NAMESPACE
  yugabyte-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -c yugabyte-operator -m learn -r $IMAGE_NAMESPACE
    - name: Build Image - test
      run: python3 build.py -c yugabyte-operator -m test -r $IMAGE_NAMESPACE
    - name: Build Image - vanilla
      run: python3 build.py -c yugabyte-operator -m vanilla -r $IMAGE_NAMESPACE
  zookeeper-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -c zookeeper-operator -m learn -r $IMAGE_NAMESPACE
    - name: Build Image - test
      run: python3 build.py -c zookeeper-operator -m test -r $IMAGE_NAMESPACE
    - name: Build Image - vanilla
      run: python3 build.py -c zookeeper-operator -m vanilla -r $IMAGE_NAMESPACE
    - name: Sieve Learn - zookeeper-operator recreate
      run: python3 sieve.py -c zookeeper-operator -w recreate -m learn-twice -r $IMAGE_NAMESPACE
    - name: Sieve Learn - zookeeper-operator scaledown-scaleup
      run: python3 sieve.py -c zookeeper-operator -w scaledown-scaleup -m learn-twice -r $IMAGE_NAMESPACE
    - name: Sieve Test - zookeeper-operator stale-state-1
      run: python3 reproduce_bugs.py -c zookeeper-operator -b stale-state-1 -r $IMAGE_NAMESPACE
    - name: Sieve Test - zookeeper-operator stale-state-2
      run: python3 reproduce_bugs.py -c zookeeper-operator -b stale-state-2 -r $IMAGE_NAMESPACE
    - name: Sieve Test - zookeeper-operator unobserved-state-1
      run: python3 reproduce_bugs.py -c zookeeper-operator -b unobserved-state-1 -r $IMAGE_NAMESPACE
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: sieve-zookeeper-operator-log
        path: log
    - name: Remove cluster
      if: always()
      run: kind delete cluster
