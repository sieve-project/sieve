# This file is automatically generated by gen_github_action.py on 2022-06-27 06:26:50.248878
name: Sieve Learning Phase
'on':
  workflow_dispatch: null
env:
  IMAGE_NAMESPACE: ghcr.io/sieve-project/action
jobs:
  cass-operator:
    runs-on: self-hosted
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Sieve Learn - cass-operator recreate
      run: python3 sieve.py -p cass-operator -t recreate -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - cass-operator scaledown-scaleup
      run: python3 sieve.py -p cass-operator -t scaledown-scaleup -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: sieve-cass-operator-log
        path: log
    - name: Remove cluster
      if: always()
      run: kind delete cluster
    - uses: JamesIves/github-pages-deploy-action@4.1.5
      name: Persistent oracle data
      with:
        branch: oracle-data
        folder: examples/cass-operator/oracle
        target-folder: cass-operator/oracle
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
  cassandra-operator:
    runs-on: self-hosted
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Sieve Learn - cassandra-operator recreate
      run: python3 sieve.py -p cassandra-operator -t recreate -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - cassandra-operator scaledown-scaleup
      run: python3 sieve.py -p cassandra-operator -t scaledown-scaleup -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: sieve-cassandra-operator-log
        path: log
    - name: Remove cluster
      if: always()
      run: kind delete cluster
    - uses: JamesIves/github-pages-deploy-action@4.1.5
      name: Persistent oracle data
      with:
        branch: oracle-data
        folder: examples/cassandra-operator/oracle
        target-folder: cassandra-operator/oracle
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
  casskop-operator:
    runs-on: self-hosted
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Sieve Learn - casskop-operator recreate
      run: python3 sieve.py -p casskop-operator -t recreate -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - casskop-operator reducepdb
      run: python3 sieve.py -p casskop-operator -t reducepdb -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - casskop-operator scaledown-to-zero
      run: python3 sieve.py -p casskop-operator -t scaledown-to-zero -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: sieve-casskop-operator-log
        path: log
    - name: Remove cluster
      if: always()
      run: kind delete cluster
    - uses: JamesIves/github-pages-deploy-action@4.1.5
      name: Persistent oracle data
      with:
        branch: oracle-data
        folder: examples/casskop-operator/oracle
        target-folder: casskop-operator/oracle
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
  elastic-operator:
    runs-on: self-hosted
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Sieve Learn - elastic-operator recreate
      run: python3 sieve.py -p elastic-operator -t recreate -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - elastic-operator scaledown-scaleup
      run: python3 sieve.py -p elastic-operator -t scaledown-scaleup -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: sieve-elastic-operator-log
        path: log
    - name: Remove cluster
      if: always()
      run: kind delete cluster
    - uses: JamesIves/github-pages-deploy-action@4.1.5
      name: Persistent oracle data
      with:
        branch: oracle-data
        folder: examples/elastic-operator/oracle
        target-folder: elastic-operator/oracle
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
  mongodb-operator:
    runs-on: self-hosted
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Sieve Learn - mongodb-operator disable-enable-arbiter
      run: python3 sieve.py -p mongodb-operator -t disable-enable-arbiter -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - mongodb-operator disable-enable-shard
      run: python3 sieve.py -p mongodb-operator -t disable-enable-shard -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - mongodb-operator recreate
      run: python3 sieve.py -p mongodb-operator -t recreate -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - mongodb-operator run-cert-manager
      run: python3 sieve.py -p mongodb-operator -t run-cert-manager -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - mongodb-operator scaleup-scaledown
      run: python3 sieve.py -p mongodb-operator -t scaleup-scaledown -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: sieve-mongodb-operator-log
        path: log
    - name: Remove cluster
      if: always()
      run: kind delete cluster
    - uses: JamesIves/github-pages-deploy-action@4.1.5
      name: Persistent oracle data
      with:
        branch: oracle-data
        folder: examples/mongodb-operator/oracle
        target-folder: mongodb-operator/oracle
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
  nifikop-operator:
    runs-on: self-hosted
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Sieve Learn - nifikop-operator change-config
      run: python3 sieve.py -p nifikop-operator -t change-config -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - nifikop-operator recreate
      run: python3 sieve.py -p nifikop-operator -t recreate -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - nifikop-operator scaledown-scaleup
      run: python3 sieve.py -p nifikop-operator -t scaledown-scaleup -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: sieve-nifikop-operator-log
        path: log
    - name: Remove cluster
      if: always()
      run: kind delete cluster
    - uses: JamesIves/github-pages-deploy-action@4.1.5
      name: Persistent oracle data
      with:
        branch: oracle-data
        folder: examples/nifikop-operator/oracle
        target-folder: nifikop-operator/oracle
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
  rabbitmq-operator:
    runs-on: self-hosted
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Sieve Learn - rabbitmq-operator recreate
      run: python3 sieve.py -p rabbitmq-operator -t recreate -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - rabbitmq-operator resize-pvc
      run: python3 sieve.py -p rabbitmq-operator -t resize-pvc -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - rabbitmq-operator scaleup-scaledown
      run: python3 sieve.py -p rabbitmq-operator -t scaleup-scaledown -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: sieve-rabbitmq-operator-log
        path: log
    - name: Remove cluster
      if: always()
      run: kind delete cluster
    - uses: JamesIves/github-pages-deploy-action@4.1.5
      name: Persistent oracle data
      with:
        branch: oracle-data
        folder: examples/rabbitmq-operator/oracle
        target-folder: rabbitmq-operator/oracle
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
  xtradb-operator:
    runs-on: self-hosted
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Sieve Learn - xtradb-operator disable-enable-haproxy
      run: python3 sieve.py -p xtradb-operator -t disable-enable-haproxy -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - xtradb-operator disable-enable-proxysql
      run: python3 sieve.py -p xtradb-operator -t disable-enable-proxysql -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - xtradb-operator recreate
      run: python3 sieve.py -p xtradb-operator -t recreate -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - xtradb-operator run-cert-manager
      run: python3 sieve.py -p xtradb-operator -t run-cert-manager -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - xtradb-operator scaleup-scaledown
      run: python3 sieve.py -p xtradb-operator -t scaleup-scaledown -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: sieve-xtradb-operator-log
        path: log
    - name: Remove cluster
      if: always()
      run: kind delete cluster
    - uses: JamesIves/github-pages-deploy-action@4.1.5
      name: Persistent oracle data
      with:
        branch: oracle-data
        folder: examples/xtradb-operator/oracle
        target-folder: xtradb-operator/oracle
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
  yugabyte-operator:
    runs-on: self-hosted
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Sieve Learn - yugabyte-operator disable-enable-tls
      run: python3 sieve.py -p yugabyte-operator -t disable-enable-tls -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - yugabyte-operator disable-enable-tuiport
      run: python3 sieve.py -p yugabyte-operator -t disable-enable-tuiport -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - yugabyte-operator recreate
      run: python3 sieve.py -p yugabyte-operator -t recreate -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - yugabyte-operator scaleup-scaledown-tserver
      run: python3 sieve.py -p yugabyte-operator -t scaleup-scaledown-tserver -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: sieve-yugabyte-operator-log
        path: log
    - name: Remove cluster
      if: always()
      run: kind delete cluster
    - uses: JamesIves/github-pages-deploy-action@4.1.5
      name: Persistent oracle data
      with:
        branch: oracle-data
        folder: examples/yugabyte-operator/oracle
        target-folder: yugabyte-operator/oracle
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
  zookeeper-operator:
    runs-on: self-hosted
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Sieve Learn - zookeeper-operator recreate
      run: python3 sieve.py -p zookeeper-operator -t recreate -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - name: Sieve Learn - zookeeper-operator scaledown-scaleup
      run: python3 sieve.py -p zookeeper-operator -t scaledown-scaleup -s learn -m learn-twice -d $IMAGE_NAMESPACE
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: sieve-zookeeper-operator-log
        path: log
    - name: Remove cluster
      if: always()
      run: kind delete cluster
    - uses: JamesIves/github-pages-deploy-action@4.1.5
      name: Persistent oracle data
      with:
        branch: oracle-data
        folder: examples/zookeeper-operator/oracle
        target-folder: zookeeper-operator/oracle
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
