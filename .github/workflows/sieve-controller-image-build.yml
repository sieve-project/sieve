# This file is automatically generated by gen_github_action.py on 2022-06-27 06:26:50.214221
name: Sieve Controller Image Build
'on':
  workflow_dispatch: null
env:
  IMAGE_NAMESPACE: ghcr.io/sieve-project/action
jobs:
  cass-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -p cass-operator -m learn -d $IMAGE_NAMESPACE -r
    - name: Build Image - test
      run: python3 build.py -p cass-operator -m test -d $IMAGE_NAMESPACE -r
    - name: Build Image - vanilla
      run: python3 build.py -p cass-operator -m vanilla -d $IMAGE_NAMESPACE -r
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
  cassandra-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -p cassandra-operator -m learn -d $IMAGE_NAMESPACE -r
    - name: Build Image - test
      run: python3 build.py -p cassandra-operator -m test -d $IMAGE_NAMESPACE -r
    - name: Build Image - vanilla
      run: python3 build.py -p cassandra-operator -m vanilla -d $IMAGE_NAMESPACE -r
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
  casskop-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -p casskop-operator -m learn -d $IMAGE_NAMESPACE -r
    - name: Build Image - test
      run: python3 build.py -p casskop-operator -m test -d $IMAGE_NAMESPACE -r
    - name: Build Image - vanilla
      run: python3 build.py -p casskop-operator -m vanilla -d $IMAGE_NAMESPACE -r
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
  elastic-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -p elastic-operator -m learn -d $IMAGE_NAMESPACE -r
    - name: Build Image - test
      run: python3 build.py -p elastic-operator -m test -d $IMAGE_NAMESPACE -r
    - name: Build Image - vanilla
      run: python3 build.py -p elastic-operator -m vanilla -d $IMAGE_NAMESPACE -r
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
  mongodb-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -p mongodb-operator -m learn -d $IMAGE_NAMESPACE -r
    - name: Build Image - test
      run: python3 build.py -p mongodb-operator -m test -d $IMAGE_NAMESPACE -r
    - name: Build Image - vanilla
      run: python3 build.py -p mongodb-operator -m vanilla -d $IMAGE_NAMESPACE -r
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
  nifikop-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -p nifikop-operator -m learn -d $IMAGE_NAMESPACE -r
    - name: Build Image - test
      run: python3 build.py -p nifikop-operator -m test -d $IMAGE_NAMESPACE -r
    - name: Build Image - vanilla
      run: python3 build.py -p nifikop-operator -m vanilla -d $IMAGE_NAMESPACE -r
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
  rabbitmq-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -p rabbitmq-operator -m learn -d $IMAGE_NAMESPACE -r
    - name: Build Image - test
      run: python3 build.py -p rabbitmq-operator -m test -d $IMAGE_NAMESPACE -r
    - name: Build Image - vanilla
      run: python3 build.py -p rabbitmq-operator -m vanilla -d $IMAGE_NAMESPACE -r
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
  xtradb-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -p xtradb-operator -m learn -d $IMAGE_NAMESPACE -r
    - name: Build Image - test
      run: python3 build.py -p xtradb-operator -m test -d $IMAGE_NAMESPACE -r
    - name: Build Image - vanilla
      run: python3 build.py -p xtradb-operator -m vanilla -d $IMAGE_NAMESPACE -r
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
  yugabyte-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -p yugabyte-operator -m learn -d $IMAGE_NAMESPACE -r
    - name: Build Image - test
      run: python3 build.py -p yugabyte-operator -m test -d $IMAGE_NAMESPACE -r
    - name: Build Image - vanilla
      run: python3 build.py -p yugabyte-operator -m vanilla -d $IMAGE_NAMESPACE -r
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
  zookeeper-operator:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      KUBECONFIG: /home/runner/.kube/config
    steps:
    - uses: actions/checkout@v2
    - name: Setup Git
      run: 'git config --global user.name "sieve"

        git config --global user.email "sieve@sieve.com"'
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: 3.7
    - name: Setup GitHub Package Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
    - name: Install Python Packages
      run: pip install -r requirements.txt
    - name: Install Kind
      run: 'GO111MODULE="on" go get sigs.k8s.io/kind@v0.13.0

        kind'
    - name: Install Mage
      run: 'go get -u github.com/magefile/mage

        mage -h'
    - name: Install Helm
      run: 'wget https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz

        tar -zxvf helm-v3.6.0-linux-amd64.tar.gz

        sudo mv linux-amd64/helm /usr/local/bin/helm

        helm'
    - name: Sieve CI config generate
      run: 'echo "{\"workload_hard_timeout\": 1000}" > sieve_config.json

        cat sieve_config.json'
    - name: Build Image - learn
      run: python3 build.py -p zookeeper-operator -m learn -d $IMAGE_NAMESPACE -r
    - name: Build Image - test
      run: python3 build.py -p zookeeper-operator -m test -d $IMAGE_NAMESPACE -r
    - name: Build Image - vanilla
      run: python3 build.py -p zookeeper-operator -m vanilla -d $IMAGE_NAMESPACE -r
    - name: Clean images
      if: always()
      run: docker image prune -a -f && docker builder prune -a -f && docker system df
